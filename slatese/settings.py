"""
Django settings for slatese project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0iofasl4il5fuc$*-2+z-b^03id5w--2bl)(srifjzs7!e^02r'


ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'slates',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'slatese.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': (os.path.join(BASE_DIR, 'templates'),),
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.csrf',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'slatese.wsgi.application'



# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'HOST': '130.211.241.122',
#         'NAME': 'slatesee',
#         'USER': 'root',
#         'PASSWORD': 'slatesee',
#     }
# }

# DEBUG = True

if os.getenv('SERVER_SOFTWARE', '').startswith('Google App Engine'):
    # Running on production App Engine, so use a Google Cloud SQL database.
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '/cloudsql/slatesee-156612:asia-east1:slatesee',
            'NAME': 'slatesee',
            'USER': 'root',
            'PASSWORD': 'slatesee',
        }
    }
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'slatesee',
            'USER': 'devusr1',
            'PASSWORD': 'Acsl_123',
            'HOST': 'localhost',
            'PORT': '3306',
        }
    }
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/static/'

AUTH_USER_MODEL = "slates.User"
AUTHENTICATION_BACKENDS = ["slates.backend.AuthBackEnd"]

LOGIN_URL = "/"

EVENTS_GALLERY_PATH = "/event-images"
PROFILE_IMAGE_PATH = "/profile-images"

GOOGLE_CLOUD_STORAGE = 'https://storage.googleapis.com/slatesee-156612.appspot.com'


if os.getenv('SERVER_SOFTWARE', '').startswith('Google App Engine'):
    EVENT_ROOT = GOOGLE_CLOUD_STORAGE + EVENTS_GALLERY_PATH
    PROFILE_ROOT = GOOGLE_CLOUD_STORAGE + PROFILE_IMAGE_PATH
else:
    EVENT_ROOT = '..'+EVENTS_GALLERY_PATH 
    PROFILE_ROOT = '..'+PROFILE_IMAGE_PATH